
name: Automated Software Development Process with Additional Logs and Structure Refinement

on:
  workflow_dispatch:  # Allows manual triggering for the initial user input

jobs:
  initial_prompt:
    runs-on: ubuntu-latest
    steps:
    - name: Prompt user for initial description
      run: |
        echo "Please provide a brief description of the project you would like to create:"
        read user_description
        echo "User description received: $user_description"
        echo "::set-output name=user_description::$user_description"
      id: prompt_user

  enrich_and_test:
    needs: initial_prompt
    runs-on: ubuntu-latest
    strategy:
      matrix:
        iteration: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]  # 10 enrichments per stage
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        echo "Installing necessary dependencies..."
        pip install -r requirements.txt
        echo "Dependencies installed."

    - name: Auto-enrich project on iteration ${{ matrix.iteration }}
      run: |
        echo "Starting enrichment for iteration ${{ matrix.iteration }}..."
        python auto_enrich.py --iteration ${{ matrix.iteration }} --description "${{ needs.prompt_user.outputs.user_description }}"
        echo "Enrichment complete for iteration ${{ matrix.iteration }}."
        echo "Logs from enrichment:"
        cat enrichment_logs.txt  # Log added for detailed enrichment results

    - name: Test and Bug Check at Stage ${{ matrix.iteration }}
      run: |
        echo "Running tests for iteration ${{ matrix.iteration }}..."
        pytest > logs.txt
        echo "Test logs:"
        cat logs.txt  # Added to print detailed test logs
        echo "Tests completed for iteration ${{ matrix.iteration }}."

    - name: Auto-correct errors (if any)
      run: |
        echo "Checking for errors in iteration ${{ matrix.iteration }}..."
        python auto_correct.py
        echo "Auto-correction results for iteration ${{ matrix.iteration }}..."
        cat auto_correction_logs.txt  # Log added to capture correction attempts
      continue-on-error: true

    - name: Upload logs to GPT for further correction if needed
      if: failure()
      uses: actions/upload-artifact@v2
      with:
        name: logs
        path: logs.txt

  finalize_project:
    needs: enrich_and_test
    runs-on: ubuntu-latest
    steps:
    - name: Finalize project and present to user
      run: |
        echo "Finalizing project..."
        python finalize_project.py
        echo "Project finalized."
